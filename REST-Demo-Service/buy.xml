<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction name="buy" method="POST" resourcePath="/buy" id="ac8250b4-a453-4acb-ace2-9cb35ecec996" xmlns:con="http://eviware.com/soapui/config">
            <con:settings><con:setting id="ac8250b4-a453-4acb-ace2-9cb35ecec996fileName">buy</con:setting></con:settings>
            <con:defaultResponse>Item 1 Response</con:defaultResponse>
            <con:dispatchStyle>SCRIPT</con:dispatchStyle>
            <con:dispatchConfig/>
            <con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()

                String[] fields = queryString.split("&amp;");
                String[] kv;

                HashMap&lt;String, String> params = new HashMap&lt;String, String>()
                for (int i = 0; i &lt; fields.length; ++i){
                kv = fields[i].split("=");
                if (2 == kv.length)
                params.put(kv[0], kv[1]);
                }

                def buystring = URLDecoder.decode(params.get("buystring"), "UTF-8")

                if (buystring == "all")
                return "WildCard Response"
                else if (buystring == "Item 1")
                return "Item 1 Response"
                else if (buystring == "Item 2")
                return "Item 2 Response"
                else if (buystring == "Item 3")
                return "Item 3 Response"
                else if (buystring == "Item 4")
                return "Item 3 Response"
                else if (buystring == "Item 5")
                return "Item 5 Response"
                else
                return "Unknown Response"


                return "Search Response"
            </con:dispatchPath>
            <con:dispatchXPath/>
            <con:parameterDispatcherRuleContainer/>
            <con:routeScript/>
            <con:response name="Item 1 Response" id="86927b66-ccd6-46a8-b11c-66f0aebf0791" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "purchasestatus": {
                    "id": "Item 1",
                    "stockStatus": "1 unit",
                    "expectedDelivery": "2000 years from now"
                    }
                    }
                </con:responseContent>
            </con:response>
            <con:response name="Item 2 Response" id="80ac35e6-c05c-4127-99ed-178e29eb280a" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "purchasestatus": {
                    "id": "Item 2",
                    "stockStatus": "10 000 boxes",
                    "expectedDelivery": "1 week"
                    }
                    }
                </con:responseContent>
            </con:response>
            <con:response name="Item 3 Response" id="134ed770-2fed-43f9-b60c-954f0f4c0817" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "purchasestatus": {
                    "id": "Item 3",
                    "stockStatus": "4 towels",
                    "expectedDelivery": "Any day now..."
                    }
                    }
                </con:responseContent>
            </con:response>
            <con:response name="Item 4 Response" id="f366eccd-b894-4f27-832d-6ed2559c3a2f" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "purchasestatus": {
                    "id": "Item 4",
                    "stockStatus": "1 unit",
                    "expectedDelivery": "In the near future."
                    }
                    }
                </con:responseContent>
            </con:response>
            <con:response name="Item 5 Response" id="2df5d21d-9c4b-46c9-949f-7377591617b1" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "purchasestatus": {
                    "id": "Item 5",
                    "stockStatus": "1 license",
                    "expectedDelivery": "You should already have it."
                    }
                    }
                </con:responseContent>
            </con:response>
            <con:response name="Invalid Session Id Fault" id="89b8d17c-a7d0-4cbb-b33b-b04a8f6d19a4" httpResponseStatus="401" dataSource="">
                <con:settings/>
                <con:responseContent>{ "Client" : "Invalid Session Id" }</con:responseContent>
            </con:response>
            <con:response name="Unknown Response" id="e2651072-ef11-4706-acfc-55e653d02958" httpResponseStatus="501" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent/>
            </con:response>
            <con:response name="WildCard Response" id="3698f1da-4882-4784-9c51-90827cb8f19a" httpResponseStatus="200" mediaType="application/json" dataSource="">
                <con:settings/>
                <con:responseContent>{
                    "result": {
                    "item": [
                    {
                    "id": "1",
                    "description": "One handy protocol droid.",
                    "price": "1"
                    },
                    {
                    "id": "2",
                    "description": "Item nr 2",
                    "price": "2"
                    },
                    {
                    "id": "3",
                    "description": "Item nr 3",
                    "price": "3"
                    },
                    {
                    "id": "4",
                    "description": "${item4description}",
                    "price": "4"
                    },
                    {
                    "id": "5",
                    "description": "Item nr 5",
                    "price": "5"
                    }
                    ]
                    }
                    }
                </con:responseContent>
            </con:response>
        </con:restMockAction>